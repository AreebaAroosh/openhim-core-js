[
  {
    "path": "/openhim-core-js/Gruntfile.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/alerts.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/api/about.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/api/audits.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/api/authentication.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/api/authorisation.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/api/certificateAuthority.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/api/channels.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/api/clients.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/api/contactGroups.coffee",
    "error": "Command failed: decaffeinate   < /openhim-core-js/src/api/contactGroups.coffee\n/root/.nvm/versions/node/v8.0.0/lib/node_modules/decaffeinate/dist/decaffeinate.js:15661\n      throw err;\n      ^\n\nError: unexpected '}' found in string at 3503: \"ContactGroup = require('../model/contactGroups').ContactGroup\\nQ = require 'q'\\nlogger = require 'winston'\\nauthorisation = require './authorisation'\\nChannel = require('../model/channels').Channel\\n\\nutils = require \\\"../utils\\\"\\n\\n###############################\\n#     Adds a contactGroup     #\\n###############################\\nexports.addContactGroup = ->\\n  # Must be admin\\n  if not authorisation.inGroup 'admin', this.authenticated\\n    utils.logAndSetResponse this, 403, \\\"User #{this.authenticated.email} is not an admin, API access to addContactGroup denied.\\\", 'info'\\n    return\\n\\n  contactGroupData = this.request.body\\n\\n  try\\n    contactGroup = new ContactGroup contactGroupData\\n    result = {} #TODO:Fix yield Q.ninvoke(contactGroup, 'save')\\n\\n    utils.logAndSetResponse this, 201, \\\"Contact Group successfully created\\\", 'info'\\n  catch err\\n    utils.logAndSetResponse this, 400, \\\"Could not add a contact group via the API: #{err}\\\", 'error'\\n\\n\\n\\n#############################################################\\n#     Retrieves the details of a specific contact group     #\\n#############################################################\\nexports.getContactGroup = (contactGroupId) ->\\n  # Must be admin\\n  if not authorisation.inGroup 'admin', this.authenticated\\n    utils.logAndSetResponse this, 403, \\\"User #{this.authenticated.email} is not an admin, API access to getContactGroup denied.\\\", 'info'\\n    return\\n\\n  contactGroupId = unescape contactGroupId\\n\\n  try\\n    result = {} #TODO:Fix yield ContactGroup.findById(contactGroupId).exec()\\n\\n    if result == null\\n      this.body = \\\"Contact Group with id '#{contactGroupId}' could not be found.\\\"\\n      this.status = 404\\n    else\\n      this.body = result\\n  catch err\\n    utils.logAndSetResponse this, 500, \\\"Could not find Contact Group by id '#{contactGroupId}' via the API: #{err}\\\", 'error'\\n\\n\\n\\n##################################\\n#     Updates a contactGroup     #\\n##################################\\nexports.updateContactGroup = (contactGroupId) ->\\n  # Must be admin\\n  if not authorisation.inGroup 'admin', this.authenticated\\n    utils.logAndSetResponse this, 403, \\\"User #{this.authenticated.email} is not an admin, API access to updateContactGroup denied.\\\", 'info'\\n    return\\n\\n  contactGroupId = unescape contactGroupId\\n  contactGroupData = this.request.body\\n\\n  # Ignore _id if it exists, a user shouldnt be able to update the internal id\\n  if contactGroupData._id\\n    delete contactGroupData._id\\n\\n  try\\n    {} #TODO:Fix yield ContactGroup.findByIdAndUpdate(contactGroupId, contactGroupData).exec()\\n    this.body = \\\"Successfully updated contact group.\\\"\\n    logger.info \\\"User #{this.authenticated.email} updated contact group with id #{contactGroupId}\\\"\\n  catch err\\n    utils.logAndSetResponse this, 500, \\\"Could not update Contact Group by id #{contactGroupId} via the API: #{err}\\\", 'error'\\n\\n\\n\\n\\n##################################\\n#     Removes a contactGroup     #\\n##################################\\nexports.removeContactGroup = (contactGroupId) ->\\n  # Must be admin\\n  if not authorisation.inGroup 'admin', this.authenticated\\n    utils.logAndSetResponse this, 403, \\\"User #{this.authenticated.email} is not an admin, API access to removeContactGroup denied.\\\", 'info'\\n    return\\n\\n  contactGroupId = unescape contactGroupId\\n\\n  try\\n    # find out if there are any alerts associated with this group\\n    linkedAlerts = {} #TODO:Fix yield Channel.find({\\n      alerts :{\\n        $elemMatch :{\\n          groups: {\\n            $in: [contactGroupId]\\n          }\\n        }\\n      }\\n    }).exec()\\n    if linkedAlerts.length > 0\\n      this.status = 409\\n      this.body = linkedAlerts\\n    else\\n      {} #TODO:Fix yield ContactGroup.findByIdAndRemove(contactGroupId).exec()\\n      this.body = \\\"Successfully removed contact group with ID '#{contactGroupId}'\\\"\\n      logger.info \\\"User #{this.authenticated.email} removed contact group with id #{contactGroupId}\\\"\\n  catch err\\n    utils.logAndSetResponse this, 500, \\\"Could not remove Contact Group by id {contactGroupId} via the API: #{err}\\\", 'error'\\n\\n\\n\\n\\n#######################################\\n#     Retrieves all contactGroups     #\\n#######################################\\nexports.getContactGroups = ->\\n  # Must be admin\\n  if not authorisation.inGroup 'admin', this.authenticated\\n    utils.logAndSetResponse this, 403, \\\"User #{this.authenticated.email} is not an admin, API access to getContactGroups denied.\\\", 'info'\\n    return\\n\\n  try\\n    this.body = {} #TODO:Fix yield ContactGroup.find().exec()\\n  catch err\\n    utils.logAndSetResponse this, 500, \\\"Could not fetch all Contact Group via the API: #{err}\\\", 'error'\\n\"\n  at popInterpolation (/root/.nvm/versions/node/v8.0.0/lib/node_modules/decaffeinate/node_modules/coffee-lex/dist/index.js:611:19)\n  at BufferedStream.step [as _getNextLocation] (/root/.nvm/versions/node/v8.0.0/lib/node_modules/decaffeinate/node_modules/coffee-lex/dist/index.js:284:29)\n  at BufferedStream.shift (/root/.nvm/versions/node/v8.0.0/lib/node_modules/decaffeinate/node_modules/coffee-lex/dist/utils/BufferedStream.js:9:45)\n  at /root/.nvm/versions/node/v8.0.0/lib/node_modules/decaffeinate/node_modules/coffee-lex/dist/utils/BufferedStream.js:19:30\n  at Array.every (native)\n  at BufferedStream.hasNext (/root/.nvm/versions/node/v8.0.0/lib/node_modules/decaffeinate/node_modules/coffee-lex/dist/utils/BufferedStream.js:18:28)\n  at Object.calculateNormalStringPadding [as default] (/root/.nvm/versions/node/v8.0.0/lib/node_modules/decaffeinate/node_modules/coffee-lex/dist/utils/calculateNormalStringPadding.js:16:16)\n  at lex (/root/.nvm/versions/node/v8.0.0/lib/node_modules/decaffeinate/node_modules/coffee-lex/dist/index.js:21:81)\n  at Function.ParseContext.fromSource (/root/.nvm/versions/node/v8.0.0/lib/node_modules/decaffeinate/node_modules/decaffeinate-parser/dist/decaffeinate-parser.umd.js:62:32)\n  at Object.parse$1 [as parse] (/root/.nvm/versions/node/v8.0.0/lib/node_modules/decaffeinate/node_modules/decaffeinate-parser/dist/decaffeinate-parser.umd.js:2687:30)\n  at parse$2 (/root/.nvm/versions/node/v8.0.0/lib/node_modules/decaffeinate/dist/decaffeinate.js:11513:32)\n  at Function.run (/root/.nvm/versions/node/v8.0.0/lib/node_modules/decaffeinate/dist/decaffeinate.js:11545:17)\n  at runStage (/root/.nvm/versions/node/v8.0.0/lib/node_modules/decaffeinate/dist/decaffeinate.js:15795:18)\n  at /root/.nvm/versions/node/v8.0.0/lib/node_modules/decaffeinate/dist/decaffeinate.js:15785:21\n  at Array.forEach (native)\n  at runStages (/root/.nvm/versions/node/v8.0.0/lib/node_modules/decaffeinate/dist/decaffeinate.js:15784:10)\n  at convert$1 (/root/.nvm/versions/node/v8.0.0/lib/node_modules/decaffeinate/dist/decaffeinate.js:15764:16)\n  at runWithCode (/root/.nvm/versions/node/v8.0.0/lib/node_modules/decaffeinate/dist/decaffeinate.js:15653:14)\n  at ReadStream.<anonymous> (/root/.nvm/versions/node/v8.0.0/lib/node_modules/decaffeinate/dist/decaffeinate.js:15639:22)\n  at emitNone (events.js:110:20)\n  at ReadStream.emit (events.js:207:7)\n  at endReadableNT (_stream_readable.js:1045:12)\n  at _combinedTickCallback (internal/process/next_tick.js:102:11)\n  at process._tickCallback (internal/process/next_tick.js:161:9)\n\n"
  },
  {
    "path": "/openhim-core-js/src/api/events.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/api/heartbeat.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/api/keystore.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/api/logs.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/api/mediators.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/api/metadata.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/api/metrics.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/api/restart.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/api/roles.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/api/tasks.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/api/transactions.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/api/users.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/api/visualizers.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/auditing.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/autoRetry.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/config/config.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/contact.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/koaApi.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/koaMiddleware.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/metrics.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/middleware/authorisation.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/middleware/basicAuthentication.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/middleware/events.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/middleware/messageStore.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/middleware/pollingBypassAuthentication.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/middleware/pollingBypassAuthorisation.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/middleware/proxy.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/middleware/requestMatching.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/middleware/rerunBypassAuthentication.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/middleware/rerunBypassAuthorisation.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/middleware/rerunUpdateTransactionTask.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/middleware/retrieveTCPTransaction.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/middleware/rewriteUrls.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/middleware/router.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/middleware/tcpBypassAuthentication.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/middleware/tlsAuthentication.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/model/alerts.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/model/audits.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/model/autoRetry.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/model/channels.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/model/clients.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/model/contactGroups.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/model/dbVersion.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/model/events.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/model/keystore.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/model/mediators.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/model/tasks.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/model/transactions.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/model/users.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/model/visualizer.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/polling.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/reports.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/server.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/stats.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/tasks.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/tcpAdapter.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/upgradeDB.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/src/utils.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/fakeTcpServer.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/globalConfig.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/integration/aboutAPITests.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/integration/auditAPITests.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/integration/auditingIntegrationTests.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/integration/authenticationAPITests.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/integration/autoRetryIntegrationTests.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/integration/certificateApiTests.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/integration/channelsAPITests.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/integration/clientsAPITests.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/integration/contactGroupsAPITests.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/integration/e2eIntegrationTests.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/integration/eventsAPITests.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/integration/generalAPITests.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/integration/heartbeatAPITest.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/integration/keystoreAPITests.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/integration/logsAPITests.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/integration/mediatorAPITests.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/integration/metadataAPITests.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/integration/metricsAPITests.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/integration/restartAPITests.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/integration/rolesAPITests.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/integration/tasksAPITests.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/integration/tcpIntegrationTests.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/integration/transactionsAPITests.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/integration/usersAPITests.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/integration/visualizersAPITests.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/testUtils.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/unit/alertsTest.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/unit/apiAuthroisationTest.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/unit/auditingTest.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/unit/authorisationTest.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/unit/autoRetryTest.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/unit/basicAuthenticationTest.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/unit/contactTest.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/unit/mediatorsAPITest.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/unit/messageStoreTest.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/unit/metadataTest.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/unit/metrics.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/unit/pollingTest.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/unit/proxyTest.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/unit/reportsTest.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/unit/requestMatchingTest.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/unit/rerunUpdateTransactionTask.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/unit/rewriteUrlsTest.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/unit/routerTest.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/unit/serverTest.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/unit/statsTest.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/unit/tasksTest.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/unit/tcpAdapterTest.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/unit/tlsAuthenticationTest.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/unit/upgradeDBTest.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/unit/utilsTest.coffee",
    "error": null
  },
  {
    "path": "/openhim-core-js/test/unit/visualizerModelTest.coffee",
    "error": null
  }
]