mongo = require "mongodb"
mongoose = require "mongoose"
Schema = mongoose.Schema

server = new mongo.Server "127.0.0.1", 27017, {}

mongoDbClient = new mongo.Db "openhimdb", server




MONGO_DB_URL= 'mongodb://localhost:27017/openhimdb'

mongoose.connect MONGO_DB_URL  
ApplicationSchema = new Schema
    "applicationID": {type: String, required: true}
    "domain": {type: String, required: true}
    "name": {type: String, required: true}
    "roles": [ {type: String, required: true }]
    "passwordHash": {type: String, required: false}
    "cert": {type: String, required: false}
    
#compile the Application Schema into a Model
Application = mongoose.model 'Application', ApplicationSchema

###
# Gets all channel currently registered.
# 
# Accepts (done) where done is a callback that will be called with (err, items)
# err will contain an error object if an error occurs otherwise items will
# contain an array fo Channel objects.
###

# save() updates existing application-object or inserts new ones as needed
# testApplicationDoc ={applicationID: "Ishmael_OpenMRS",domain: "him.jembi.org",name: "OpenMRS Ishmael instance",roles: [ "OpenMRS_PoC", "PoC" ],passwordHash: "",cert: ""}


exports.registerApplication = (insertValues, done) ->
	newApplication  = new Application insertValues
	newApplication.save (err, saveResult) ->     
			if err
				console.log "Unable to save record: #{err}"
				return done err
			else
				console.log "Application Collection Save #{saveResult}"  
				return done null, saveResult    
        